{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","shortid","generate","Section","title","children","Notification","props","message","App","useState","setGood","setNeutral","setBad","percentage","setPercentage","count","setCount","useEffect","Math","ceil","Object","keys","state","Error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAoBeA,EAlBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OACf,+BACI,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,uDAA0BC,EAA1B,W,gBCaOC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,8BACKD,EAAQE,KAAI,SAACC,GAAD,OACT,yBAEAC,KAAK,SAELC,QAAS,kBAAMJ,EAAgBE,IAJ/B,cAI0CA,IADrCG,IAAQC,kBCMVC,EAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,qCACA,6BAAKD,IACAC,MCKMC,EARM,SAACC,GAAD,OACjB,4BAAKA,EAAMC,WC0DAC,MAvDf,WAEE,MAAwBC,mBAAS,GAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOnB,EAAP,KAAYsB,EAAZ,KACA,EAAoCH,mBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA0BL,mBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEMtB,EAAU,CAAEN,OAAMC,UAASC,OAuBjC,OALE2B,qBAAU,WACRD,GAAU,kBAAO5B,EAAOC,EAAUC,KAClCwB,GAAe,kBAAMI,KAAKC,KAAM/B,EAAO2B,EAAS,UACjD,CAAC3B,EAAMC,EAASC,EAAKyB,IAGpB,gCACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACI,cAAC,EAAD,CACET,QAAS0B,OAAOC,KAAK3B,GACrBC,gBA1BU,SAAC2B,GACrB,OAAQA,GACR,IAAK,OACH,OAAOZ,GAAQ,SAAAY,GAAK,OAAIA,EAAQ,KAElC,IAAK,UACH,OAAOX,GAAW,SAAAW,GAAK,OAAIA,EAAQ,KAErC,IAAK,MACH,OAAOV,GAAO,SAAAU,GAAK,OAAIA,EAAQ,KAEjC,QACE,MAAM,IAAIC,MAAJ,qBAAwBD,UAkB5B,cAAC,EAAD,CAASnB,MAAM,aAAf,SACGY,EAAQ,EACN,cAAC,EAAD,CACC3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,EACPvB,mBAAoBqB,IACnB,cAAC,EAAD,CAAcN,QAAQ,4B,YC/CrCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e99e27a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => (\r\n    <ul>       \r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive percentage: {positivePercentage}%</li>\r\n    </ul>    \r\n)\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n// import styles from '../FeedbackOptions/FeedbackOptions.module.scss'\r\nimport shortid from 'shortid';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n    <div>\r\n        {options.map((option) => (\r\n            <button\r\n            // className={styles.button}\r\n            type=\"button\"\r\n            key={shortid.generate()}\r\n            onClick={() => onLeaveFeedback(option)}> {option}</button>\r\n        ))} \r\n    </div>\r\n)\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    onLeaveFeedback: PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <>\r\n    <h1>{title}</h1>\r\n        {children}\r\n    </>\r\n)\r\n\r\n\r\nSection.propTypes = {\r\n    children: PropTypes.node,\r\n    title: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Section;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = (props) => (\r\n    <p>{ props.message }</p>\r\n)\r\n\r\nNotification.propTypes = {\r\n    props: PropTypes.string,\r\n}\r\n\r\nexport default Notification;\r\n","import { useState, useEffect } from 'react';\r\nimport Statistics from './components/Statistics';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Section from './components/Section';\r\nimport Notification from './components/Notification';\r\n\r\nfunction App() {\r\n   \r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const options = { good, neutral, bad }; \r\n\r\n  const leaveFeedback = (state) => {\r\n    switch (state) {\r\n    case 'good':\r\n      return setGood(state => state + 1);\r\n\r\n    case 'neutral':\r\n      return setNeutral(state => state + 1);\r\n    \r\n    case 'bad':\r\n      return setBad(state => state + 1);\r\n\r\n    default:\r\n      throw new Error(`Unsuported ${state}`);\r\n    }\r\n  }   \r\n\r\n    useEffect(() => {\r\n      setCount (() => (good + neutral + bad));\r\n      setPercentage (() => Math.ceil((good / count) * 100));\r\n  }, [good, neutral, bad, count]);\r\n\r\n  return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n              options={Object.keys(options)}\r\n              onLeaveFeedback={leaveFeedback}\r\n              // onLeaveFeedback={leaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {count > 0 ? \r\n            (<Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={count}\r\n              positivePercentage={percentage} />) : \r\n              (<Notification message=\"No feedback given\"/>)}\r\n        </Section>\r\n      </div>\r\n  ) \r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport '../src/styles.css'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}